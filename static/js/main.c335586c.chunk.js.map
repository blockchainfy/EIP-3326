{"version":3,"sources":["App.tsx","index.tsx"],"names":["ethereum","window","imToken","alert","s","callAPI","JSON","stringify","alertErr","err","message","NETWORK_MAINNET","chainId","NETWORK_xDAI","wallet_switchEthereumChain_Mainnet","request","method","params","then","catch","wallet_switchEthereumChain_xDAI","methods","func","name","code","toString","App","className","id","map","onClick","rootElement","document","getElementById","render"],"mappings":"2IAUMA,EAAWC,OAAOD,SAClBE,EAAUD,OAAOC,QAEjBC,EAAQD,EACV,SAAUE,GACRF,EAAQG,QAAQ,mBAAoBC,KAAKC,UAAUH,KAErDH,OAAOE,MAELK,EAAW,SAACC,GAChBN,EAAMM,EAAIC,UAGNC,EAAkB,CACtBC,QAAS,OAGLC,EAAe,CACnBD,QAAS,QAGLE,EAAqC,WACzC,OAAOd,EACJe,QAAQ,CACPC,OAAQ,6BACRC,OAAQ,CAACN,KAEVO,MAAK,WACJf,EAAM,uCAEPgB,MAAMX,IAELY,EAAkC,WACtC,OAAOpB,EACJe,QAAQ,CACPC,OAAQ,6BACRC,OAAQ,CAACJ,KAEVK,MAAK,WACJf,EAAM,uCAEPgB,MAAMX,IAGLa,EAAU,CACd,CACEC,KAAMR,EACNS,KAAM,qCACNC,KAAMV,EAAmCW,YAE3C,CACEH,KAAMF,EACNG,KAAM,kCACNC,KAAMJ,EAAgCK,aAI3B,SAASC,IACtB,OACE,sBAAKC,UAAU,MAAf,UACE,oBAAIC,GAAG,KAAP,sBACCP,EAAQQ,KAAI,SAAAb,GACX,OACE,oCACE,wBAAQc,QAASd,EAAOM,KAAxB,SAA+BN,EAAOO,OACtC,oCACE,gDACA,8BAAMP,EAAOQ,YAJHR,EAAOO,YCrE/B,IAAMQ,EAAcC,SAASC,eAAe,QAC5CC,iBAAO,cAACR,EAAD,IAASK,I","file":"static/js/main.c335586c.chunk.js","sourcesContent":["import './styles.css'\n\ndeclare global {\n  interface Window {\n    ethereum: any\n    imToken: any\n    tronWeb: any\n  }\n}\n\nconst ethereum = window.ethereum\nconst imToken = window.imToken\n\nconst alert = imToken\n  ? function (s: string) {\n      imToken.callAPI('native.toastInfo', JSON.stringify(s))\n    }\n  : window.alert\n\nconst alertErr = (err: Error) => {\n  alert(err.message)\n}\n\nconst NETWORK_MAINNET = {\n  chainId: '0x1',\n}\n\nconst NETWORK_xDAI = {\n  chainId: '0x64',\n}\n\nconst wallet_switchEthereumChain_Mainnet = () => {\n  return ethereum\n    .request({\n      method: 'wallet_switchEthereumChain',\n      params: [NETWORK_MAINNET],\n    })\n    .then(() => {\n      alert('Switch Ethereum Chain Successful')\n    })\n    .catch(alertErr)\n}\nconst wallet_switchEthereumChain_xDAI = () => {\n  return ethereum\n    .request({\n      method: 'wallet_switchEthereumChain',\n      params: [NETWORK_xDAI],\n    })\n    .then(() => {\n      alert('Switch Ethereum Chain Successful')\n    })\n    .catch(alertErr)\n}\n\nconst methods = [\n  {\n    func: wallet_switchEthereumChain_Mainnet,\n    name: 'wallet_switchEthereumChain_Mainnet',\n    code: wallet_switchEthereumChain_Mainnet.toString(),\n  },\n  {\n    func: wallet_switchEthereumChain_xDAI,\n    name: 'wallet_switchEthereumChain_xDAI',\n    code: wallet_switchEthereumChain_xDAI.toString(),\n  },\n]\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <h3 id=\"h1\">EIP-3326</h3>\n      {methods.map(method => {\n        return (\n          <section key={method.name}>\n            <button onClick={method.func}>{method.name}</button>\n            <details>\n              <summary>show code</summary>\n              <pre>{method.code}</pre>\n            </details>\n          </section>\n        )\n      })}\n    </div>\n  )\n}\n","import { render } from 'react-dom'\n\nimport App from './App'\n\nconst rootElement = document.getElementById('root')\nrender(<App />, rootElement)\n"],"sourceRoot":""}